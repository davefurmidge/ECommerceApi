name: Deploy E-commerce API

on:
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: ecommerce-api-furmidge-app  # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: ./publish
  AZURE_CONNECTION_STRING: ""
  RESOURCE_GROUP: rg-ecommerce-api-furmidge-dev
  SQLSERVER_NAME: ecommerce-api-furmidge-dev
  DOTNET_VERSION: '7'           # set this to the dot net version to use
  WORKING_DIRECTORY: ./EcommerceApi.App

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repo
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      # Run Restore
      - name: dotnet Restore
        run: |
            pwd    
            ls -al
            dotnet restore
        working-directory: ${{ env.WORKING_DIRECTORY}}

      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: ${{ env.WORKING_DIRECTORY}}
       
      - name: dotnet publish
        run: |
            dotnet publish --configuration Release --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
            pwd
            ls -al
            tree .
        working-directory: ${{ env.WORKING_DIRECTORY}}

      - name: Add Runner IP to SQL Firewall
        run: |
          set -x
          IP=`curl https://api.ipify.org`
          echo "RUNNER_IP=$IP" >> $GITHUB_ENV
          SQLSERVER_NAME=${{ env.SQLSERVER_NAME}}
          RESOURCE_GROUP_NAME=${{ env.RESOURCE_GROUP }}
          az sql server firewall-rule create --name runner-ip \
             --resource-group ${{ env.RESOURCE_GROUP }} \
              --server ${{ env.SQLSERVER_NAME}} \
              --end-ip-address $IP \
              --start-ip-address $IP

      - name: Run EF
        run: |
          dotnet tool install --global dotnet-ef
          dotnet tool restore
          dotnet ef database update -p '${{ env.WORKING_DIRECTORY}}/EcommerceApi.App.csproj' --connection '${{ secrets.AZURE_SQL_CONNECTIONSTRING}}'
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using Azure Credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          package: ${{ env.WORKING_DIRECTORY}}/${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      - name: Delete Runner IP from SQL Firewall
        run: |
          set -x
          SQLSERVER_NAME=${{ env.SQLSERVER_NAME}}
          RESOURCE_GROUP_NAME=${{ env.RESOURCE_GROUP }}
          az sql server firewall-rule delete --name runner-ip \
              --resource-group ${{ env.RESOURCE_GROUP }} \
              --server ${{ env.SQLSERVER_NAME}} \
  
      - name: logout
        run: az logout